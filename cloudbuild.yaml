# cloudbuild.yaml 
substitutions:
  _REGION: 'asia-south1'
  _AI_REGION: 'us-central1'  # Keep as us-central1 for Gemini
  _SERVICE_ACCOUNT: 'vertex-ai-sa@basket-filter-engine.iam.gserviceaccount.com'  # FIX: Use actual project ID
  _SERVICE_NAME: 'basket-filter-api'

steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:$BUILD_ID',
      '-t', 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:latest',
      '.'
    ]

  # Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:latest']
    
  # Deploy to Cloud Run with AI support
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:$BUILD_ID',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '2Gi',
      '--cpu', '2',
      '--max-instances', '10',
      '--min-instances', '0',
      '--timeout', '900',
      '--service-account', '${_SERVICE_ACCOUNT}',  # This should now work
      '--vpc-connector', 'basket-filter-connector',
      '--vpc-egress', 'private-ranges-only',
      '--set-env-vars', 'ASPNETCORE_ENVIRONMENT=Production,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,VertexAI__ProjectId=$PROJECT_ID,VertexAI__Location=${_AI_REGION},VertexAI__ModelName=gemini-1.5-pro-001,VertexAI__EnableAI=true,VertexAI__Temperature=0.3,VertexAI__MaxTokens=1024'
    ]

images:
  - 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:$BUILD_ID'
  - 'asia-south1-docker.pkg.dev/$PROJECT_ID/basket-filter-repo/basket-filter:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'